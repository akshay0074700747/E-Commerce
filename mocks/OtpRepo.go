// Code generated by mockery v2.36.0. DO NOT EDIT.

package mocks

import (
	entities "ecommerce/internal/entities"

	mock "github.com/stretchr/testify/mock"
)

// OtpRepo is an autogenerated mock type for the OtpRepo type
type OtpRepo struct {
	mock.Mock
}

// GetOTP provides a mock function with given fields: email
func (_m *OtpRepo) GetOTP(email string) (string, error) {
	ret := _m.Called(email)

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (string, error)); ok {
		return rf(email)
	}
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(email)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(email)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SaveOTP provides a mock function with given fields: otp
func (_m *OtpRepo) SaveOTP(otp entities.OTP) error {
	ret := _m.Called(otp)

	var r0 error
	if rf, ok := ret.Get(0).(func(entities.OTP) error); ok {
		r0 = rf(otp)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SendOTP provides a mock function with given fields: otp
func (_m *OtpRepo) SendOTP(otp string) error {
	ret := _m.Called(otp)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(otp)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewOtpRepo creates a new instance of OtpRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewOtpRepo(t interface {
	mock.TestingT
	Cleanup(func())
}) *OtpRepo {
	mock := &OtpRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
